pipeline{
  agent any 
  environment {
     subnetIP = ""
     jenkinsHome=""
     slaveConfig=""
     taurusConfigDir=""
     taurusArtifactDir=""
     jmeterScriptDir=""
     jmeterReportName=""
     subject=""
     body=""
    }
  stages{
    stage('Build new server'){
      steps{
        dir('src/main/terraform/serverBuild') {
          bat 'terraform init'
          withCredentials([string(credentialsId: 'AZURE_CLIENT_ID', variable: 'AZURE_CLIENT_ID'), string(credentialsId: 'AZURE_CLIENT_SECRET', variable: 'AZURE_CLIENT_SECRET'), string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID'), string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID'), string(credentialsId: 'SRVR_PASSWORD', variable: 'SRVR_PASSWORD')]) {
            bat 'terraform apply -var subscription_id=%AZURE_SUBSCRIPTION_ID% -var client_id=%AZURE_CLIENT_ID% -var client_secret=%AZURE_CLIENT_SECRET% -var tenant_id=%AZURE_TENANT_ID% -var srvr_admin_password=%SRVR_PASSWORD% -auto-approve'
          }
          bat 'terraform output ip >subnetIP'
          script{
            subnetIP=readFile('subnetIP').trim()
          }
          withCredentials([string(credentialsId: 'AZURE_CLIENT_ID', variable: 'AZURE_CLIENT_ID'), string(credentialsId: 'AZURE_CLIENT_SECRET', variable: 'AZURE_CLIENT_SECRET'), string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID'), string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID'), string(credentialsId: 'SRVR_PASSWORD', variable: 'SRVR_PASSWORD')]) {
            bat 'terraform destroy -target azurerm_virtual_machine_extension.azurevm_ps -var subscription_id=%AZURE_SUBSCRIPTION_ID% -var client_id=%AZURE_CLIENT_ID% -var client_secret=%AZURE_CLIENT_SECRET% -var tenant_id=%AZURE_TENANT_ID% -var srvr_admin_password=%SRVR_PASSWORD% -force'
          }  
        }
      }
    } 
  
    stage('Configure Slave'){
     steps{
        dir('src/main/powerShellScripts') {
            withCredentials([string(credentialsId: 'SRVR_PASSWORD', variable: 'SRVR_PASSWORD')]) {
              bat "PowerShell.exe -File copyJavaToSlave.ps1 ${subnetIP} ${SRVR_PASSWORD}"
            }
        }
        dir('src/main/terraform/serverSetup'){
          bat 'terraform init'
          withCredentials([string(credentialsId: 'AZURE_CLIENT_ID', variable: 'AZURE_CLIENT_ID'), string(credentialsId: 'AZURE_CLIENT_SECRET', variable: 'AZURE_CLIENT_SECRET'), string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID'), string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID'), string(credentialsId: 'SRVR_PASSWORD', variable: 'SRVR_PASSWORD')]) {
            bat 'terraform apply -var subscription_id=%AZURE_SUBSCRIPTION_ID% -var client_id=%AZURE_CLIENT_ID% -var client_secret=%AZURE_CLIENT_SECRET% -var tenant_id=%AZURE_TENANT_ID% -var srvr_admin_password=%SRVR_PASSWORD% -auto-approve'
          }
        }
     }
    }
    stage('Performance Testing'){
      steps{
        dir('src'){
          bat "PowerShell.exe -File \".\\main\\powerShellScripts\\updateTaurusSlaveConfig.ps1\" -subnetIP ${subnetIP}"
        }
        dir('src/test/taurus/configurations') {
                script{
                   jenkinsHome=JENKINS_HOME.replace("Program Files (x86)", "PROGRA~2")
                   taurusConfigDir="${jenkinsHome}\\workspace\\${JOB_NAME}\\src\\test\\taurus\\configurations"
                   taurusArtifactDir="${jenkinsHome}\\workspace\\${JOB_NAME}\\src\\test\\taurus\\logs\\jenkiks-${JOB_NAME}-${BUILD_NUMBER}"
                   jmeterScriptDir="${jenkinsHome}\\workspace\\${JOB_NAME}\\src\\test\\jmeter\\scripts"
                   jmeterReportName="${JOB_NAME}-${BUILD_NUMBER}-JmeterReport"
                }
         }
        dir('src/test') {
            bzt "${taurusConfigDir}\\Google.yml -o settings.artifacts-dir=${taurusArtifactDir} -o scenarios.Google.script=${jmeterScriptDir}\\Google.jmx ${taurusConfigDir}\\Slave.yml"
        }
      }
    }
    
    stage('Report Generation'){
        steps{
          dir('src/test/dependencies'){
            bat"java -jar TaurusOutputConverter.jar \"${taurusArtifactDir}\\kpi.jtl\" \"${taurusArtifactDir}\\output.jtl\""
          }
          dir('src/test/taurus/logs'){
            bat "md ${taurusArtifactDir}\\${jmeterReportName}"
            bat "jmeter.bat -g ${taurusArtifactDir}\\output.jtl -o ${taurusArtifactDir}\\${jmeterReportName}"
          }
          dir('src/main/powerShellScripts'){
            bat "PowerShell.exe -File compressReport.ps1 ${taurusArtifactDir} ${jmeterReportName}"
            script{
              subject="Jenkins-Jmeter-Report Job:${JOB_NAME} Build:${BUILD_NUMBER}"
              body="Hi , This is a system generated Email. Do not reply.  Thanks"
            }
             withCredentials([usernamePassword(credentialsId: 'MNS_MAIL', passwordVariable: 'Password', usernameVariable: 'Email')]){
                 bat "PowerShell.exe -File emailReport.ps1 -User ${Email} -Password ${Password} -To \"${recipients}\" -Subject \"${subject}\" -Body \"${body}\" -Dir ${taurusArtifactDir} -File ${jmeterReportName}"
             }

          }
        }
    }
 }
}
